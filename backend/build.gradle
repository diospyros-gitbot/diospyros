plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.siouan.frontend-jdk17' version '8.0.0'
}

group = 'com.diospyros'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudGcpVersion', "4.8.1")
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.cloud:spring-cloud-gcp-starter'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-sql-postgresql'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

frontend {
	nodeDistributionProvided = false
	nodeVersion = '18.17.1'
	nodeDistributionUrlRoot = 'https://nodejs.org/dist/'
	nodeDistributionUrlPathPattern = 'vVERSION/node-vVERSION-ARCH.TYPE'
	nodeDistributionServerUsername = 'username'
	nodeDistributionServerPassword = 'password'
	nodeInstallDirectory = file("${projectDir}/node")

	installScript = 'install'
	cleanScript = 'run clean'
	assembleScript = 'run assemble'
	checkScript = 'run check'
	publishScript = 'run publish'

	packageJsonDirectory = projectDir
	maxDownloadAttempts = 1
	retryHttpStatuses = [408, 429, 500, 502, 503, 504]
	retryInitialIntervalMs = 1000
	retryMaxIntervalMs = 30000
	cacheDirectory = file("${projectDir}/.frontend-gradle-plugin")
}
//tasks.named('test') {
//	useJUnitPlatform()
//}
